{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MAiCeA,EA9BM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACFC,mBAAS,IADP,mBAC/BC,EAD+B,KACnBC,EADmB,KAetC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,QAAQ,IAG7BR,GAAc,SAAAS,GAAU,OAAIP,GAAJ,mBAAkBO,OAC1CN,EAAc,OAIV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCShBG,EAbK,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAC3B,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,0FAC4EO,UAAUF,GADtF,sBAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,YAAsB,IAApBf,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,MAAMe,EAAU,EAAVA,OAC7B,MAAM,CACFhB,GAAIA,EACJC,MAAOA,EACPC,IAAG,OAAEc,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBf,QATnB,kBAYZY,GAZY,4CAAH,sDCsCLI,EAjCC,SAAC,GAAgB,IAAfX,EAAc,EAAdA,SAAc,ECHJ,SAAEA,GAAY,IAAD,EACXrB,mBAAS,CAC/B2B,KAAM,GACNM,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAarC,OARAC,qBAAU,WACNhB,EAAQC,GAAUgB,MAAK,SAAAC,GACnBH,EAAS,CACLR,KAAMW,EACNL,SAAS,SAGnB,CAACZ,IACIa,EDDuBK,CAAalB,GAA/BS,EATgB,EASrBH,KAAYM,EATS,EASTA,QAGnB,OACI,oCACA,4BAAKZ,GACL,yBAAKJ,UAAU,aACVgB,GAAW,yCAERH,EAAOD,KAAI,SAAAW,GACP,OAAO,kBAAC,EAAD,eAAaC,IAAKD,EAAI1B,IAAQ0B,UEI1CE,EAxBM,WAAI,MAGgB1C,mBAAS,CAAC,iBAAkB,aAAc,eAH1D,mBAGdQ,EAHc,KAGFT,EAHE,KAQrB,OACI,oCACI,8CACA,6BACF,kBAAC,EAAD,CAAaA,cAAeA,IAC1B,oCAEIS,EAAWqB,KAAI,SAACR,GAChB,OAAO,kBAAC,EAAD,CAASoB,IAAKpB,EAAUA,SAAUA,UCdzDsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.54522bc9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length<=2){\r\n            return;\r\n        }\r\n        setCategories(categories=> [inputValue,...categories]);\r\n        setinputValue('');\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type='text' \r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGridItem\r\n","export const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=zTcd21k2Tl2vCPbQxDqwExQ5TX2yCWXr&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(({id,title,images})=>{\r\n        return{\r\n            id: id,\r\n            title: title,\r\n            url: images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    //const [images, setImages] = useState([]);\r\n\r\n    /* useEffect(()=>{\r\n        getGifs(category).then(gifs => setImages(gifs));\r\n    },[category]) */\r\n\r\n    //Para renombrar de data a images\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    \r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        <div className=\"card-grid\">\r\n            {loading && <p>Loading...</p>}\r\n            {\r\n                images.map(img=>{\r\n                    return <GifGridItem key={img.id} {...img}/>\r\n                })\r\n            }\r\n            \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = ( category)=>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(()=>{\r\n        getGifs(category).then(imgs =>{\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n    },[category]);\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport  AddCategory  from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n    //const categories = ['Age of Empires', 'Warcraft', 'Dragon ball']\r\n\r\n    const [categories, setCategories] =  useState(['Age of Empires', 'Dark Souls', 'Bloodborne']);\r\n\r\n   /*  const handleAdd = ()=>{\r\n        setCategories([...categories, 'Dark Souls']);\r\n    } */\r\n    return(\r\n        <>\r\n            <h2>GIF Expert App</h2>\r\n            <hr />\r\n          <AddCategory setCategories={setCategories}/>\r\n            <>\r\n                {\r\n                categories.map((category)=>{\r\n                return <GifGrid key={category} category={category} />\r\n                })\r\n                }\r\n            </>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}